# 工作流程名稱，會顯示在 GitHub 的 Actions 頁面上
name: pytest

# 設定觸發條件
on: 
    push: 
      branches:
        - main
    workflow_dispatch:
    pull_request:
        types: [opened]

jobs:
  pytest:  # 定義一個工作（job），名稱為 pytest
    runs-on: ubuntu-latest  # 在 GitHub 提供的 Ubuntu 虛擬機器上執行

    steps:  # 以下是這個 job 執行的步驟列表
      - name: print github action context
        run: echo ${{ github.repositoryUrl }}

      # 檢查工作目錄狀態（checkout 之前）
      - name: pre checkout
        run: |
          pwd       # 顯示目前所在目錄
          ls -ln    # 列出檔案與資料夾

      # 步驟 1：檢出程式碼（將 repo 內容下載到 runner 的工作目錄中）
      - name: checkout code
        uses: actions/checkout@v4  # 使用 GitHub 官方的 checkout Action 第 4 版

      # 再次檢查工作目錄狀態（checkout 之後）
      - name: after checkout
        run: |
          pwd       # 顯示目前所在目錄
          ls -ln    # 列出檔案與資料夾

      # 步驟 2：安裝 pytest 測試框架
      - name: install pytest
        run: pip install pytest  # 使用 pip 安裝 pytest 工具

      # 步驟 3：執行 pytest 測試
      - name: run pytest
        run: pytest  # 自動尋找以 test_ 或 _test 結尾的測試檔並執行
